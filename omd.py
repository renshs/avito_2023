# Guido van Rossum <guido@python.org>


def get_answer():
    '''
    Function that asks for answer from stdin
    '''
    answer = ''
    while '1' not in answer and '2' not in answer:
        print('–Ø –Ω–µ –ø–æ–Ω—è–ª, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')
        answer = input()
    return answer


def step1():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –≤—ã–ø–∏—Ç—å –∑–∞–π—Ç–∏ –≤ –±–∞—Ä. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()

    if options[option]:
        return step2_umbrella()
    return step2_no_umbrella()


def step2_umbrella():
    '''
    Function that is continues branch with umbrella
    '''
    options = {
        '–í–µ—Ä—É—Ç—å—Å—è –¥–æ–º–æ–π': 1,
        '–ò–¥—ë–º –≤ –±–∞—Ä!': 2,
    }
    print('–ö–æ–Ω–µ—á–Ω–æ –≤–∑—è—Ç—å! –î–æ–∂–¥—å –æ–±–µ—â–∞–ª–∏!\n'
          'ü¶Ü –ø—Ä–æ—à–ª–∞ –≤—Å–µ–≥–æ 5 –º–∏–Ω—É—Ç, –∏ —Ç—É—Ç –∂–µ –Ω–∞—á–∞–ª—Å—è –ª–∏–≤–µ–Ω—å!!!\n'
          '–•–æ—Ä–æ—à–æ, —á—Ç–æ –∑–æ–Ω—Ç –ø–æ–¥ –∫—Ä—ã–ª–æ–º!\n'
          '–ù–æ –ø–æ–≥–æ–¥–∞ —É—Ö—É–¥—à–∞–µ—Ç—Å—è, –ø–æ—Ä—ã–≤—ã –≤–µ—Ç—Ä–∞ –Ω–∞—á–∏–Ω–∞—é—Ç –≤—ã—Ä—ã–≤–∞—Ç—å –∑–æ–Ω—Ç \n'
          '–ß—Ç–æ –∂–µ –¥–µ–ª–∞—Ç—å?!\n'
          '–í—ã–±–µ—Ä–∏—Ç–µ: –ó–æ–Ω—Ç –∂–∞–ª–∫–æ, –ø–æ–π–¥—ë–º –¥–æ–º–æ–π! - 1\n'
          '–°–ª–µ–¥—É—é—â–∞—è –ø—è—Ç–Ω–∏—Ü–∞ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é! - 2')
    
    answer = get_answer()

    if answer == '1':
        print('–í–æ—Ç ü¶Ü –∏ –¥–æ–º–∞! –û–Ω–∞ –æ–±–∞–∂–∞–µ—Ç —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –¥–æ–∂–¥—å –∏–∑ –æ–∫–Ω–∞!\n')
    else:
        print('–ö–∞–∫ –∂–µ —Ç—è–∂–µ–ª–æ —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–æ–Ω—Ç!\n'
              '–£—É—É-—É—É—É-—É—É—É!\n'
              '–ó–æ–Ω—Ç —É–ª–µ—Ç–µ–ª (\n'
              '–ù–æ –±–∞—Ä —Å—Ç–æ–∏—Ç –Ω–∞ –º–µ—Å—Ç–µ, —Ç–∞–∫ —á—Ç–æ –≤—ã—Ö–æ–¥–Ω—ã–µ –Ω–µ –∏—Å–ø–æ—Ä—á–µ–Ω—ã!')


def step2_no_umbrella():
    '''
    Function that is continues branch without umbrella
    '''
    print('–ó–æ–Ω—Ç –Ω–∏ –∫ —á–µ–º—É, –ø–æ–≥–æ–¥–∞ –æ–±–µ—â–∞–µ—Ç –±—ã—Ç—å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–π!\n'
          '–ù–∞ –Ω–µ–±–µ –≤—Å–µ–≥–æ –ª–∏—à—å –æ–¥–Ω–∞ –º–∞–ª–µ—å–∫–∞—è —Ç—É—á–∫–∞, –Ω–µ —Å—Ç–æ–∏—Ç  –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è.\n'
          '–û –Ω–µ—Ç! –ö–∞–∂–µ—Ç—Å—è, —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –ª–∏–≤–µ–Ω—å!\n'
          '–ß—Ç–æ –º—ã –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?!\n'
          '–í—ã–±–µ—Ä–∏—Ç–µ: –í–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π! - 1\n'
          '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ - 2\n')
    
    answer = get_answer()
    
    if answer == '1':
        print('–£—Ä–∞! ü¶Ü –Ω–µ –ø—Ä–æ–º–æ–∫–ª–∞ )')
    else:
        print('ü¶Ü –¥–æ—à–ª–∞ –¥–æ –±–∞—Ä–∞ –Ω–µ –ø—Ä–æ–º–æ–∫–Ω—É–≤, –æ–Ω–∞ –∂–µ —É—Ç–∫–∞!')


if __name__ == '__main__':
    step1()
